package com.contrast.Contrast.presentation.features.main.home.ui

import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Card
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.Font
import androidx.compose.ui.text.font.FontFamily
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.contrast.Contrast.R

@Preview(showBackground = true)@Composable
fun StoreCard(name: String, address: String) {
    Card(
        modifier = Modifier
            .width(220.dp) // üî• K√≠ch th∆∞·ªõc chu·∫©n theo thi·∫øt k·∫ø
            .height(160.dp), // üî• Chi·ªÅu cao h·ª£p l√Ω
        shape = RoundedCornerShape(12.dp),
        elevation = 4.dp
    ) {
        Box {
            // üîπ H√¨nh ·∫£nh c·ª≠a h√†ng
            Image(
                painter = painterResource(R.drawable.store_image),
                contentDescription = "Store Image",
                modifier = Modifier.fillMaxSize(),
                contentScale = ContentScale.Crop // üî• Gi·ªØ t·ª∑ l·ªá ·∫£nh, kh√¥ng b·ªã m√©o
            )

            // üîπ Icon ƒëi·ªÅu h∆∞·ªõng (g√≥c tr√™n ph·∫£i)
            Box(
                modifier = Modifier
                    .align(Alignment.TopEnd)
                    .padding(8.dp)
                    .size(36.dp)
                    .background(Color.Red, shape = RoundedCornerShape(8.dp)), // üî• Vi·ªÅn bo tr√≤n
                contentAlignment = Alignment.Center
            ) {
                Image(
                    painter = painterResource(R.drawable.navigation),
                    contentDescription = "Navigation Icon",
                    modifier = Modifier.size(20.dp) // üî• Icon nh·ªè g·ªçn ƒë√∫ng thi·∫øt k·∫ø
                )
            }

            // üîπ Overlay ch·ª©a th√¥ng tin c·ª≠a h√†ng (n·∫±m d∆∞·ªõi ·∫£nh)
            Box(
                modifier = Modifier
                    .fillMaxWidth()
                    .align(Alignment.BottomStart)
                    .background(Color.Black.copy(alpha = 0.6f)) // üî• N·ªÅn m·ªù 60% ƒëen
                    .padding(10.dp)
            ) {
                Column {


                    Text(
                        text = name,
                        style = TextStyle(
                            fontSize = 12.sp,
                            lineHeight = 18.sp,
                            fontFamily = FontFamily(Font(R.font.inter_18pt_medium)),
                            fontWeight = FontWeight(500),
                            color = Color(0xFFFFFFFF),
                        )
                    )
                    Text(
                        text = address,
                        style = TextStyle(
                            fontSize = 10.sp,
                            lineHeight = 15.sp,
                            fontFamily = FontFamily(Font(R.font.inter_18pt_medium)),
                            fontWeight = FontWeight(400),
                            color = Color(0xFFD7D7D7),
                        )
                    )
                }
            }
        }
    }
}
